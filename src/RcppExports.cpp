// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// update_U_arma
arma::mat update_U_arma(arma::mat U, arma::mat V, arma::mat ddiff, arma::mat ddratio, double alpha, double sigma);
RcppExport SEXP _scINSIGHT2_update_U_arma(SEXP USEXP, SEXP VSEXP, SEXP ddiffSEXP, SEXP ddratioSEXP, SEXP alphaSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ddiff(ddiffSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ddratio(ddratioSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(update_U_arma(U, V, ddiff, ddratio, alpha, sigma));
    return rcpp_result_gen;
END_RCPP
}
// update_par_arma
arma::mat update_par_arma(arma::mat U, arma::mat V, arma::mat ddiff, arma::mat ddratio, double alpha);
RcppExport SEXP _scINSIGHT2_update_par_arma(SEXP USEXP, SEXP VSEXP, SEXP ddiffSEXP, SEXP ddratioSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ddiff(ddiffSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ddratio(ddratioSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(update_par_arma(U, V, ddiff, ddratio, alpha));
    return rcpp_result_gen;
END_RCPP
}
// matrix_deviance
double matrix_deviance(arma::mat pred, arma::mat obs);
RcppExport SEXP _scINSIGHT2_matrix_deviance(SEXP predSEXP, SEXP obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pred(predSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type obs(obsSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_deviance(pred, obs));
    return rcpp_result_gen;
END_RCPP
}
// iteration
List iteration(arma::mat U, arma::mat V, arma::mat Y, arma::mat beta, arma::mat X, double alpha, double sigma, arma::mat latentpart, arma::mat regpart, arma::vec logs, int maxIter, double d, int n, int m, double llast, double tol1, double tol2, double p);
RcppExport SEXP _scINSIGHT2_iteration(SEXP USEXP, SEXP VSEXP, SEXP YSEXP, SEXP betaSEXP, SEXP XSEXP, SEXP alphaSEXP, SEXP sigmaSEXP, SEXP latentpartSEXP, SEXP regpartSEXP, SEXP logsSEXP, SEXP maxIterSEXP, SEXP dSEXP, SEXP nSEXP, SEXP mSEXP, SEXP llastSEXP, SEXP tol1SEXP, SEXP tol2SEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type latentpart(latentpartSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type regpart(regpartSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type logs(logsSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type llast(llastSEXP);
    Rcpp::traits::input_parameter< double >::type tol1(tol1SEXP);
    Rcpp::traits::input_parameter< double >::type tol2(tol2SEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration(U, V, Y, beta, X, alpha, sigma, latentpart, regpart, logs, maxIter, d, n, m, llast, tol1, tol2, p));
    return rcpp_result_gen;
END_RCPP
}
// multMat
NumericMatrix multMat(arma::mat m1, arma::mat m2);
RcppExport SEXP _scINSIGHT2_multMat(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(multMat(m1, m2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scINSIGHT2_update_U_arma", (DL_FUNC) &_scINSIGHT2_update_U_arma, 6},
    {"_scINSIGHT2_update_par_arma", (DL_FUNC) &_scINSIGHT2_update_par_arma, 5},
    {"_scINSIGHT2_matrix_deviance", (DL_FUNC) &_scINSIGHT2_matrix_deviance, 2},
    {"_scINSIGHT2_iteration", (DL_FUNC) &_scINSIGHT2_iteration, 18},
    {"_scINSIGHT2_multMat", (DL_FUNC) &_scINSIGHT2_multMat, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_scINSIGHT2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
